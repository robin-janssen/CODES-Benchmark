# This section describes the requirements of the build/installation
# process itself. Being able to do this was the original reason to
# introduce pyproject.toml
[build-system]
requires = [
    "setuptools >=61",
    "setuptools_scm >=7",
]
build-backend = "setuptools.build_meta"

# This section provides general project metadata that is used across
# a variety of build tools. Notably, the version specified here is the
# single source of truth for CODES's version
[project]
name = "CODES"
description = "Benchmarking tool for neural (chemical) ODE surrogate models"
readme = "README.md"
maintainers = [
    { name = "Robin Janssen, Immanuel Sulzer", email = "robin.janssen@stud.uni-heidelberg.de" },
]
dynamic = ["version"]
requires-python = ">=3.8"
license = { text = "GPL-3.0" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]
dependencies = [
    "h5py==3.9.0",
    "matplotlib==3.8.4",
    "numpy==1.26.4",
    "PyYAML==6.0.1",
    "scipy==1.14.1",
    "tabulate==0.9.0",
    "torch==2.3.0",
    "torchode==0.2.0",
    "tqdm==4.66.4",
]

[project.optional-dependencies]
tests = [
    "pytest",
    #"pytest-cov",
]
dev = [
    "pre-commit",
    "black",
    "isort",
]
# docs = [
#     "sphinx",
#     "sphinx_mdinclude",
#     "sphinx_rtd_theme",
# ]


# The following section contains setuptools-specific configuration
# options. For a full reference of available options, check the overview
# at https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[tool.setuptools]
packages = [
    "codes",
]

# Configure setuptools_scm, which extracts the version number from
# the version control system. For more information see its documentation:
# https://github.com/pypa/setuptools_scm
# [tool.setuptools_scm]
# version_scheme = "post-release"
# local_scheme = "node-and-date"
# write_to = "CODES/_version.py"

# The following is the configuration for the pytest test suite
[tool.pytest.ini_options]
testpaths = [
    "test",
]
pythonpath = "."
python_functions = "test_*"
python_classes = "Test*"
