Search.setIndex({"alltitles": {"CODES API Documentation": [[24, null]], "Module contents": [[0, "module-codes"], [1, "module-codes.benchmark"], [2, "module-codes.surrogates"], [3, "module-codes.surrogates.AbstractSurrogate"], [4, "module-codes.train"], [5, "module-codes.tune"], [6, "module-codes.utils"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "Subpackages": [[0, "subpackages"]], "codes": [[25, null]], "codes package": [[0, null]], "codes.benchmark": [[7, null]], "codes.benchmark package": [[1, null]], "codes.benchmark.bench_fcts": [[8, null]], "codes.benchmark.bench_fcts module": [[1, "module-codes.benchmark.bench_fcts"]], "codes.benchmark.bench_plots": [[9, null]], "codes.benchmark.bench_plots module": [[1, "module-codes.benchmark.bench_plots"]], "codes.benchmark.bench_utils": [[10, null]], "codes.benchmark.bench_utils module": [[1, "module-codes.benchmark.bench_utils"]], "codes.surrogates": [[11, null]], "codes.surrogates package": [[2, null]], "codes.surrogates.AbstractSurrogate": [[12, null]], "codes.surrogates.AbstractSurrogate package": [[3, null]], "codes.surrogates.AbstractSurrogate.surrogates": [[13, null]], "codes.surrogates.AbstractSurrogate.surrogates module": [[3, "module-codes.surrogates.AbstractSurrogate.surrogates"]], "codes.surrogates.surrogate_classes": [[14, null]], "codes.surrogates.surrogate_classes module": [[2, "module-codes.surrogates.surrogate_classes"]], "codes.surrogates.surrogates module": [[2, "codes-surrogates-surrogates-module"]], "codes.train": [[15, null]], "codes.train package": [[4, null]], "codes.train.train_fcts": [[16, null]], "codes.train.train_fcts module": [[4, "module-codes.train.train_fcts"]], "codes.tune": [[17, null]], "codes.tune package": [[5, null]], "codes.tune.evaluate_study": [[18, null]], "codes.tune.evaluate_study module": [[5, "module-codes.tune.evaluate_study"]], "codes.tune.evaluate_tuning": [[19, null]], "codes.tune.evaluate_tuning module": [[5, "module-codes.tune.evaluate_tuning"]], "codes.tune.optuna_fcts": [[20, null]], "codes.tune.optuna_fcts module": [[5, "module-codes.tune.optuna_fcts"]], "codes.utils": [[21, null]], "codes.utils package": [[6, null]], "codes.utils.data_utils": [[22, null]], "codes.utils.data_utils module": [[6, "module-codes.utils.data_utils"]], "codes.utils.utils": [[23, null]], "codes.utils.utils module": [[6, "module-codes.utils.utils"]]}, "docnames": ["codes", "codes.benchmark", "codes.surrogates", "codes.surrogates.AbstractSurrogate", "codes.train", "codes.tune", "codes.utils", "docs/source/codes.benchmark", "docs/source/codes.benchmark.bench_fcts", "docs/source/codes.benchmark.bench_plots", "docs/source/codes.benchmark.bench_utils", "docs/source/codes.surrogates", "docs/source/codes.surrogates.AbstractSurrogate", "docs/source/codes.surrogates.AbstractSurrogate.surrogates", "docs/source/codes.surrogates.surrogate_classes", "docs/source/codes.train", "docs/source/codes.train.train_fcts", "docs/source/codes.tune", "docs/source/codes.tune.evaluate_study", "docs/source/codes.tune.evaluate_tuning", "docs/source/codes.tune.optuna_fcts", "docs/source/codes.utils", "docs/source/codes.utils.data_utils", "docs/source/codes.utils.utils", "index", "modules"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["codes.rst", "codes.benchmark.rst", "codes.surrogates.rst", "codes.surrogates.AbstractSurrogate.rst", "codes.train.rst", "codes.tune.rst", "codes.utils.rst", "docs/source/codes.benchmark.rst", "docs/source/codes.benchmark.bench_fcts.rst", "docs/source/codes.benchmark.bench_plots.rst", "docs/source/codes.benchmark.bench_utils.rst", "docs/source/codes.surrogates.rst", "docs/source/codes.surrogates.AbstractSurrogate.rst", "docs/source/codes.surrogates.AbstractSurrogate.surrogates.rst", "docs/source/codes.surrogates.surrogate_classes.rst", "docs/source/codes.train.rst", "docs/source/codes.train.train_fcts.rst", "docs/source/codes.tune.rst", "docs/source/codes.tune.evaluate_study.rst", "docs/source/codes.tune.evaluate_tuning.rst", "docs/source/codes.tune.optuna_fcts.rst", "docs/source/codes.utils.rst", "docs/source/codes.utils.data_utils.rst", "docs/source/codes.utils.utils.rst", "index.rst", "modules.rst"], "indexentries": {"abstractsurrogatemodel (class in codes.surrogates)": [[2, "codes.surrogates.AbstractSurrogateModel", false]], "abstractsurrogatemodel (class in codes.surrogates.abstractsurrogate)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel", false]], "abstractsurrogatemodel (class in codes.surrogates.abstractsurrogate.surrogates)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel", false]], "acquire() (codes.train.train_fcts.dummylock method)": [[4, "codes.train.train_fcts.DummyLock.acquire", false]], "branchnet (class in codes.surrogates)": [[2, "codes.surrogates.BranchNet", false]], "check_and_load_data() (in module codes.utils)": [[6, "codes.utils.check_and_load_data", false]], "check_and_load_data() (in module codes.utils.data_utils)": [[6, "codes.utils.data_utils.check_and_load_data", false]], "check_benchmark() (in module codes.benchmark)": [[1, "codes.benchmark.check_benchmark", false]], "check_benchmark() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.check_benchmark", false]], "check_surrogate() (in module codes.benchmark)": [[1, "codes.benchmark.check_surrogate", false]], "check_surrogate() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.check_surrogate", false]], "check_training_status() (in module codes.utils)": [[6, "codes.utils.check_training_status", false]], "check_training_status() (in module codes.utils.utils)": [[6, "codes.utils.utils.check_training_status", false]], "chemdataset (class in codes.surrogates)": [[2, "codes.surrogates.ChemDataset", false]], "clean_metrics() (in module codes.benchmark)": [[1, "codes.benchmark.clean_metrics", false]], "clean_metrics() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.clean_metrics", false]], "codes": [[0, "module-codes", false]], "codes.benchmark": [[1, "module-codes.benchmark", false], [7, "module-codes.benchmark", false]], "codes.benchmark.bench_fcts": [[1, "module-codes.benchmark.bench_fcts", false], [8, "module-codes.benchmark.bench_fcts", false]], "codes.benchmark.bench_plots": [[1, "module-codes.benchmark.bench_plots", false], [9, "module-codes.benchmark.bench_plots", false]], "codes.benchmark.bench_utils": [[1, "module-codes.benchmark.bench_utils", false], [10, "module-codes.benchmark.bench_utils", false]], "codes.surrogates": [[2, "module-codes.surrogates", false], [11, "module-codes.surrogates", false]], "codes.surrogates.abstractsurrogate": [[3, "module-codes.surrogates.AbstractSurrogate", false], [12, "module-codes.surrogates.AbstractSurrogate", false]], "codes.surrogates.abstractsurrogate.surrogates": [[3, "module-codes.surrogates.AbstractSurrogate.surrogates", false], [13, "module-codes.surrogates.AbstractSurrogate.surrogates", false]], "codes.surrogates.surrogate_classes": [[2, "module-codes.surrogates.surrogate_classes", false]], "codes.train": [[4, "module-codes.train", false], [15, "module-codes.train", false]], "codes.train.train_fcts": [[4, "module-codes.train.train_fcts", false], [16, "module-codes.train.train_fcts", false]], "codes.tune": [[5, "module-codes.tune", false], [17, "module-codes.tune", false]], "codes.tune.evaluate_study": [[5, "module-codes.tune.evaluate_study", false], [18, "module-codes.tune.evaluate_study", false]], "codes.tune.evaluate_tuning": [[5, "module-codes.tune.evaluate_tuning", false], [19, "module-codes.tune.evaluate_tuning", false]], "codes.tune.optuna_fcts": [[5, "module-codes.tune.optuna_fcts", false], [20, "module-codes.tune.optuna_fcts", false]], "codes.utils": [[6, "module-codes.utils", false], [21, "module-codes.utils", false]], "codes.utils.data_utils": [[6, "module-codes.utils.data_utils", false], [22, "module-codes.utils.data_utils", false]], "codes.utils.utils": [[6, "module-codes.utils.utils", false], [23, "module-codes.utils.utils", false]], "coef (codes.surrogates.polynomial attribute)": [[2, "codes.surrogates.Polynomial.coef", false]], "compare_batchsize() (in module codes.benchmark)": [[1, "codes.benchmark.compare_batchsize", false]], "compare_batchsize() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_batchsize", false]], "compare_dynamic_accuracy() (in module codes.benchmark)": [[1, "codes.benchmark.compare_dynamic_accuracy", false]], "compare_dynamic_accuracy() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_dynamic_accuracy", false]], "compare_extrapolation() (in module codes.benchmark)": [[1, "codes.benchmark.compare_extrapolation", false]], "compare_extrapolation() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_extrapolation", false]], "compare_inference_time() (in module codes.benchmark)": [[1, "codes.benchmark.compare_inference_time", false]], "compare_inference_time() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_inference_time", false]], "compare_interpolation() (in module codes.benchmark)": [[1, "codes.benchmark.compare_interpolation", false]], "compare_interpolation() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_interpolation", false]], "compare_main_losses() (in module codes.benchmark)": [[1, "codes.benchmark.compare_main_losses", false]], "compare_main_losses() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_main_losses", false]], "compare_models() (in module codes.benchmark)": [[1, "codes.benchmark.compare_models", false]], "compare_models() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_models", false]], "compare_relative_errors() (in module codes.benchmark)": [[1, "codes.benchmark.compare_relative_errors", false]], "compare_relative_errors() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_relative_errors", false]], "compare_sparse() (in module codes.benchmark)": [[1, "codes.benchmark.compare_sparse", false]], "compare_sparse() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_sparse", false]], "compare_uq() (in module codes.benchmark)": [[1, "codes.benchmark.compare_UQ", false]], "compare_uq() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.compare_UQ", false]], "config (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.config", false]], "config (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.config", false]], "config (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.config", false]], "config (codes.surrogates.latentneuralode attribute)": [[2, "codes.surrogates.LatentNeuralODE.config", false]], "config (codes.surrogates.latentpoly attribute)": [[2, "codes.surrogates.LatentPoly.config", false]], "convert_dict_to_scientific_notation() (in module codes.benchmark)": [[1, "codes.benchmark.convert_dict_to_scientific_notation", false]], "convert_dict_to_scientific_notation() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.convert_dict_to_scientific_notation", false]], "convert_to_standard_types() (in module codes.benchmark)": [[1, "codes.benchmark.convert_to_standard_types", false]], "convert_to_standard_types() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.convert_to_standard_types", false]], "count_trainable_parameters() (in module codes.benchmark)": [[1, "codes.benchmark.count_trainable_parameters", false]], "count_trainable_parameters() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.count_trainable_parameters", false]], "create_dataloader() (codes.surrogates.fullyconnected method)": [[2, "codes.surrogates.FullyConnected.create_dataloader", false]], "create_dataloader() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.create_dataloader", false]], "create_dataloader_n() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.create_dataloader_n", false]], "create_dataset() (in module codes.utils)": [[6, "codes.utils.create_dataset", false]], "create_dataset() (in module codes.utils.data_utils)": [[6, "codes.utils.data_utils.create_dataset", false]], "create_hdf5_dataset() (in module codes.utils)": [[6, "codes.utils.create_hdf5_dataset", false]], "create_hdf5_dataset() (in module codes.utils.data_utils)": [[6, "codes.utils.data_utils.create_hdf5_dataset", false]], "create_model_dir() (in module codes.utils)": [[6, "codes.utils.create_model_dir", false]], "create_model_dir() (in module codes.utils.utils)": [[6, "codes.utils.utils.create_model_dir", false]], "create_objective() (in module codes.tune)": [[5, "codes.tune.create_objective", false]], "create_objective() (in module codes.tune.optuna_fcts)": [[5, "codes.tune.optuna_fcts.create_objective", false]], "create_task_list_for_surrogate() (in module codes.train)": [[4, "codes.train.create_task_list_for_surrogate", false]], "create_task_list_for_surrogate() (in module codes.train.train_fcts)": [[4, "codes.train.train_fcts.create_task_list_for_surrogate", false]], "dataseterror": [[6, "codes.utils.data_utils.DatasetError", false]], "decoder (class in codes.surrogates)": [[2, "codes.surrogates.Decoder", false]], "degree (codes.surrogates.polynomial attribute)": [[2, "codes.surrogates.Polynomial.degree", false]], "denormalize() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.denormalize", false]], "denormalize() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.denormalize", false]], "denormalize() (codes.surrogates.abstractsurrogatemodel method)": [[2, "codes.surrogates.AbstractSurrogateModel.denormalize", false]], "deriv() (codes.surrogates.modelwrapper static method)": [[2, "codes.surrogates.ModelWrapper.deriv", false]], "deriv2() (codes.surrogates.modelwrapper class method)": [[2, "codes.surrogates.ModelWrapper.deriv2", false]], "deriv2_loss() (codes.surrogates.modelwrapper class method)": [[2, "codes.surrogates.ModelWrapper.deriv2_loss", false]], "deriv_loss() (codes.surrogates.modelwrapper class method)": [[2, "codes.surrogates.ModelWrapper.deriv_loss", false]], "determine_batch_size() (in module codes.utils)": [[6, "codes.utils.determine_batch_size", false]], "determine_batch_size() (in module codes.utils.utils)": [[6, "codes.utils.utils.determine_batch_size", false]], "device (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.device", false]], "device (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.device", false]], "device (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.device", false]], "device (codes.surrogates.latentpoly attribute)": [[2, "codes.surrogates.LatentPoly.device", false]], "dimension (codes.surrogates.polynomial attribute)": [[2, "codes.surrogates.Polynomial.dimension", false]], "discard_numpy_entries() (in module codes.benchmark)": [[1, "codes.benchmark.discard_numpy_entries", false]], "discard_numpy_entries() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.discard_numpy_entries", false]], "download_data() (in module codes.utils)": [[6, "codes.utils.download_data", false]], "download_data() (in module codes.utils.data_utils)": [[6, "codes.utils.data_utils.download_data", false]], "downloadprogressbar (class in codes.utils.data_utils)": [[6, "codes.utils.data_utils.DownloadProgressBar", false]], "dummylock (class in codes.train.train_fcts)": [[4, "codes.train.train_fcts.DummyLock", false]], "encoder (class in codes.surrogates)": [[2, "codes.surrogates.Encoder", false]], "epoch() (codes.surrogates.fullyconnected method)": [[2, "codes.surrogates.FullyConnected.epoch", false]], "epoch() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.epoch", false]], "epoch_profile() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.epoch_profile", false]], "evaluate_accuracy() (in module codes.benchmark)": [[1, "codes.benchmark.evaluate_accuracy", false]], "evaluate_accuracy() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.evaluate_accuracy", false]], "evaluate_batchsize() (in module codes.benchmark)": [[1, "codes.benchmark.evaluate_batchsize", false]], "evaluate_batchsize() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.evaluate_batchsize", false]], "evaluate_compute() (in module codes.benchmark)": [[1, "codes.benchmark.evaluate_compute", false]], "evaluate_compute() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.evaluate_compute", false]], "evaluate_dynamic_accuracy() (in module codes.benchmark)": [[1, "codes.benchmark.evaluate_dynamic_accuracy", false]], "evaluate_dynamic_accuracy() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.evaluate_dynamic_accuracy", false]], "evaluate_extrapolation() (in module codes.benchmark)": [[1, "codes.benchmark.evaluate_extrapolation", false]], "evaluate_extrapolation() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.evaluate_extrapolation", false]], "evaluate_interpolation() (in module codes.benchmark)": [[1, "codes.benchmark.evaluate_interpolation", false]], "evaluate_interpolation() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.evaluate_interpolation", false]], "evaluate_sparse() (in module codes.benchmark)": [[1, "codes.benchmark.evaluate_sparse", false]], "evaluate_sparse() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.evaluate_sparse", false]], "evaluate_tuning() (in module codes.tune.evaluate_tuning)": [[5, "codes.tune.evaluate_tuning.evaluate_tuning", false]], "evaluate_uq() (in module codes.benchmark)": [[1, "codes.benchmark.evaluate_UQ", false]], "evaluate_uq() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.evaluate_UQ", false]], "fit() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.fit", false]], "fit() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.fit", false]], "fit() (codes.surrogates.abstractsurrogatemodel method)": [[2, "codes.surrogates.AbstractSurrogateModel.fit", false]], "fit() (codes.surrogates.fullyconnected method)": [[2, "codes.surrogates.FullyConnected.fit", false]], "fit() (codes.surrogates.latentneuralode method)": [[2, "codes.surrogates.LatentNeuralODE.fit", false], [2, "id0", false]], "fit() (codes.surrogates.latentpoly method)": [[2, "codes.surrogates.LatentPoly.fit", false]], "fit() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.fit", false]], "fit_profile() (codes.surrogates.latentneuralode method)": [[2, "codes.surrogates.LatentNeuralODE.fit_profile", false]], "fit_profile() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.fit_profile", false]], "flatten_dict() (in module codes.benchmark)": [[1, "codes.benchmark.flatten_dict", false]], "flatten_dict() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.flatten_dict", false]], "format_seconds() (in module codes.benchmark)": [[1, "codes.benchmark.format_seconds", false]], "format_seconds() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.format_seconds", false]], "format_time() (in module codes.benchmark)": [[1, "codes.benchmark.format_time", false]], "format_time() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.format_time", false]], "forward() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.forward", false]], "forward() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.forward", false]], "forward() (codes.surrogates.abstractsurrogatemodel method)": [[2, "codes.surrogates.AbstractSurrogateModel.forward", false]], "forward() (codes.surrogates.branchnet method)": [[2, "codes.surrogates.BranchNet.forward", false]], "forward() (codes.surrogates.decoder method)": [[2, "codes.surrogates.Decoder.forward", false]], "forward() (codes.surrogates.encoder method)": [[2, "codes.surrogates.Encoder.forward", false]], "forward() (codes.surrogates.fullyconnected method)": [[2, "codes.surrogates.FullyConnected.forward", false]], "forward() (codes.surrogates.fullyconnectednet method)": [[2, "codes.surrogates.FullyConnectedNet.forward", false]], "forward() (codes.surrogates.latentneuralode method)": [[2, "codes.surrogates.LatentNeuralODE.forward", false], [2, "id1", false]], "forward() (codes.surrogates.latentpoly method)": [[2, "codes.surrogates.LatentPoly.forward", false]], "forward() (codes.surrogates.modelwrapper method)": [[2, "codes.surrogates.ModelWrapper.forward", false]], "forward() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.forward", false]], "forward() (codes.surrogates.ode method)": [[2, "codes.surrogates.ODE.forward", false]], "forward() (codes.surrogates.polynomial method)": [[2, "codes.surrogates.Polynomial.forward", false]], "forward() (codes.surrogates.trunknet method)": [[2, "codes.surrogates.TrunkNet.forward", false]], "fullyconnected (class in codes.surrogates)": [[2, "codes.surrogates.FullyConnected", false]], "fullyconnectednet (class in codes.surrogates)": [[2, "codes.surrogates.FullyConnectedNet", false]], "get_activation_function() (in module codes.tune)": [[5, "codes.tune.get_activation_function", false]], "get_activation_function() (in module codes.tune.optuna_fcts)": [[5, "codes.tune.optuna_fcts.get_activation_function", false]], "get_custom_palette() (in module codes.benchmark)": [[1, "codes.benchmark.get_custom_palette", false]], "get_custom_palette() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.get_custom_palette", false]], "get_data_subset() (in module codes.utils)": [[6, "codes.utils.get_data_subset", false]], "get_data_subset() (in module codes.utils.data_utils)": [[6, "codes.utils.data_utils.get_data_subset", false]], "get_model_config() (in module codes.benchmark)": [[1, "codes.benchmark.get_model_config", false]], "get_model_config() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.get_model_config", false]], "get_progress_bar() (in module codes.utils)": [[6, "codes.utils.get_progress_bar", false]], "get_progress_bar() (in module codes.utils.utils)": [[6, "codes.utils.utils.get_progress_bar", false]], "get_registered_classes() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel class method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.get_registered_classes", false]], "get_registered_classes() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel class method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.get_registered_classes", false]], "get_registered_classes() (codes.surrogates.abstractsurrogatemodel class method)": [[2, "codes.surrogates.AbstractSurrogateModel.get_registered_classes", false]], "get_required_models_list() (in module codes.benchmark)": [[1, "codes.benchmark.get_required_models_list", false]], "get_required_models_list() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.get_required_models_list", false]], "get_surrogate() (in module codes.benchmark)": [[1, "codes.benchmark.get_surrogate", false]], "get_surrogate() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.get_surrogate", false]], "identity_loss() (codes.surrogates.modelwrapper method)": [[2, "codes.surrogates.ModelWrapper.identity_loss", false]], "inference_time_bar_plot() (in module codes.benchmark)": [[1, "codes.benchmark.inference_time_bar_plot", false]], "inference_time_bar_plot() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.inference_time_bar_plot", false]], "int_ext_sparse() (in module codes.benchmark)": [[1, "codes.benchmark.int_ext_sparse", false]], "int_ext_sparse() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.int_ext_sparse", false]], "l1 (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.L1", false]], "l1 (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.L1", false]], "l1 (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.L1", false]], "l2_loss() (codes.surrogates.modelwrapper static method)": [[2, "codes.surrogates.ModelWrapper.l2_loss", false]], "latentneuralode (class in codes.surrogates)": [[2, "codes.surrogates.LatentNeuralODE", false]], "latentpoly (class in codes.surrogates)": [[2, "codes.surrogates.LatentPoly", false]], "load() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.load", false]], "load() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.load", false]], "load() (codes.surrogates.abstractsurrogatemodel method)": [[2, "codes.surrogates.AbstractSurrogateModel.load", false]], "load_and_save_config() (in module codes.utils)": [[6, "codes.utils.load_and_save_config", false]], "load_and_save_config() (in module codes.utils.utils)": [[6, "codes.utils.utils.load_and_save_config", false]], "load_loss_history() (in module codes.tune.evaluate_tuning)": [[5, "codes.tune.evaluate_tuning.load_loss_history", false]], "load_model() (in module codes.benchmark)": [[1, "codes.benchmark.load_model", false]], "load_model() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.load_model", false]], "load_model_test_losses() (in module codes.tune)": [[5, "codes.tune.load_model_test_losses", false]], "load_model_test_losses() (in module codes.tune.evaluate_study)": [[5, "codes.tune.evaluate_study.load_model_test_losses", false]], "load_study_config() (in module codes.tune)": [[5, "codes.tune.load_study_config", false]], "load_study_config() (in module codes.tune.evaluate_study)": [[5, "codes.tune.evaluate_study.load_study_config", false]], "load_task_list() (in module codes.utils)": [[6, "codes.utils.load_task_list", false]], "load_task_list() (in module codes.utils.utils)": [[6, "codes.utils.utils.load_task_list", false]], "load_yaml_config() (in module codes.tune)": [[5, "codes.tune.load_yaml_config", false]], "load_yaml_config() (in module codes.tune.optuna_fcts)": [[5, "codes.tune.optuna_fcts.load_yaml_config", false]], "mae (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.MAE", false]], "mae (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.MAE", false]], "mae (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.MAE", false]], "main() (in module codes.tune.evaluate_study)": [[5, "codes.tune.evaluate_study.main", false]], "main() (in module codes.tune.evaluate_tuning)": [[5, "codes.tune.evaluate_tuning.main", false]], "make_comparison_csv() (in module codes.benchmark)": [[1, "codes.benchmark.make_comparison_csv", false]], "make_comparison_csv() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.make_comparison_csv", false]], "make_description() (in module codes.utils)": [[6, "codes.utils.make_description", false]], "make_description() (in module codes.utils.utils)": [[6, "codes.utils.utils.make_description", false]], "make_optuna_params() (in module codes.tune)": [[5, "codes.tune.make_optuna_params", false]], "make_optuna_params() (in module codes.tune.optuna_fcts)": [[5, "codes.tune.optuna_fcts.make_optuna_params", false]], "measure_inference_time() (in module codes.benchmark)": [[1, "codes.benchmark.measure_inference_time", false]], "measure_inference_time() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.measure_inference_time", false]], "measure_memory_footprint() (in module codes.benchmark)": [[1, "codes.benchmark.measure_memory_footprint", false]], "measure_memory_footprint() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.measure_memory_footprint", false]], "model (codes.surrogates.latentneuralode attribute)": [[2, "codes.surrogates.LatentNeuralODE.model", false]], "model (codes.surrogates.latentpoly attribute)": [[2, "codes.surrogates.LatentPoly.model", false]], "modelwrapper (class in codes.surrogates)": [[2, "codes.surrogates.ModelWrapper", false]], "module": [[0, "module-codes", false], [1, "module-codes.benchmark", false], [1, "module-codes.benchmark.bench_fcts", false], [1, "module-codes.benchmark.bench_plots", false], [1, "module-codes.benchmark.bench_utils", false], [2, "module-codes.surrogates", false], [2, "module-codes.surrogates.surrogate_classes", false], [3, "module-codes.surrogates.AbstractSurrogate", false], [3, "module-codes.surrogates.AbstractSurrogate.surrogates", false], [4, "module-codes.train", false], [4, "module-codes.train.train_fcts", false], [5, "module-codes.tune", false], [5, "module-codes.tune.evaluate_study", false], [5, "module-codes.tune.evaluate_tuning", false], [5, "module-codes.tune.optuna_fcts", false], [6, "module-codes.utils", false], [6, "module-codes.utils.data_utils", false], [6, "module-codes.utils.utils", false], [7, "module-codes.benchmark", false], [8, "module-codes.benchmark.bench_fcts", false], [9, "module-codes.benchmark.bench_plots", false], [10, "module-codes.benchmark.bench_utils", false], [11, "module-codes.surrogates", false], [12, "module-codes.surrogates.AbstractSurrogate", false], [13, "module-codes.surrogates.AbstractSurrogate.surrogates", false], [15, "module-codes.train", false], [16, "module-codes.train.train_fcts", false], [17, "module-codes.tune", false], [18, "module-codes.tune.evaluate_study", false], [19, "module-codes.tune.evaluate_tuning", false], [20, "module-codes.tune.optuna_fcts", false], [21, "module-codes.utils", false], [22, "module-codes.utils.data_utils", false], [23, "module-codes.utils.utils", false]], "moving_average() (in module codes.tune)": [[5, "codes.tune.moving_average", false]], "moving_average() (in module codes.tune.evaluate_study)": [[5, "codes.tune.evaluate_study.moving_average", false]], "multionet (class in codes.surrogates)": [[2, "codes.surrogates.MultiONet", false]], "n_quantities (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.n_quantities", false]], "n_quantities (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.n_quantities", false]], "n_quantities (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.n_quantities", false]], "n_timesteps (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.n_timesteps", false]], "n_timesteps (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.n_timesteps", false]], "n_timesteps (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.n_timesteps", false]], "nice_print() (in module codes.utils)": [[6, "codes.utils.nice_print", false]], "nice_print() (in module codes.utils.utils)": [[6, "codes.utils.utils.nice_print", false]], "normalisation (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.normalisation", false]], "normalisation (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.normalisation", false]], "normalisation (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.normalisation", false]], "normalize_data() (in module codes.utils)": [[6, "codes.utils.normalize_data", false]], "normalize_data() (in module codes.utils.data_utils)": [[6, "codes.utils.data_utils.normalize_data", false]], "ode (class in codes.surrogates)": [[2, "codes.surrogates.ODE", false]], "parallel_training() (in module codes.train)": [[4, "codes.train.parallel_training", false]], "parallel_training() (in module codes.train.train_fcts)": [[4, "codes.train.train_fcts.parallel_training", false]], "parse_args() (in module codes.tune.evaluate_tuning)": [[5, "codes.tune.evaluate_tuning.parse_args", false]], "parse_arguments() (in module codes.tune.evaluate_study)": [[5, "codes.tune.evaluate_study.parse_arguments", false]], "parse_for_none() (in module codes.utils.utils)": [[6, "codes.utils.utils.parse_for_none", false]], "plot_all_generalization_errors() (in module codes.benchmark)": [[1, "codes.benchmark.plot_all_generalization_errors", false]], "plot_all_generalization_errors() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_all_generalization_errors", false]], "plot_average_errors_over_time() (in module codes.benchmark)": [[1, "codes.benchmark.plot_average_errors_over_time", false]], "plot_average_errors_over_time() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_average_errors_over_time", false]], "plot_average_uncertainty_over_time() (in module codes.benchmark)": [[1, "codes.benchmark.plot_average_uncertainty_over_time", false]], "plot_average_uncertainty_over_time() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_average_uncertainty_over_time", false]], "plot_comparative_dynamic_correlation_heatmaps() (in module codes.benchmark)": [[1, "codes.benchmark.plot_comparative_dynamic_correlation_heatmaps", false]], "plot_comparative_dynamic_correlation_heatmaps() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_comparative_dynamic_correlation_heatmaps", false]], "plot_comparative_error_correlation_heatmaps() (in module codes.benchmark)": [[1, "codes.benchmark.plot_comparative_error_correlation_heatmaps", false]], "plot_comparative_error_correlation_heatmaps() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_comparative_error_correlation_heatmaps", false]], "plot_dynamic_correlation() (in module codes.benchmark)": [[1, "codes.benchmark.plot_dynamic_correlation", false]], "plot_dynamic_correlation() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_dynamic_correlation", false]], "plot_dynamic_correlation_heatmap() (in module codes.benchmark)": [[1, "codes.benchmark.plot_dynamic_correlation_heatmap", false]], "plot_dynamic_correlation_heatmap() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_dynamic_correlation_heatmap", false]], "plot_dynamic_correlation_heatmap_old() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_dynamic_correlation_heatmap_old", false]], "plot_error_correlation_heatmap() (in module codes.benchmark)": [[1, "codes.benchmark.plot_error_correlation_heatmap", false]], "plot_error_correlation_heatmap() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_error_correlation_heatmap", false]], "plot_error_correlation_heatmap_old() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_error_correlation_heatmap_old", false]], "plot_error_distribution_comparative() (in module codes.benchmark)": [[1, "codes.benchmark.plot_error_distribution_comparative", false]], "plot_error_distribution_comparative() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_error_distribution_comparative", false]], "plot_error_distribution_per_quantity() (in module codes.benchmark)": [[1, "codes.benchmark.plot_error_distribution_per_quantity", false]], "plot_error_distribution_per_quantity() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_error_distribution_per_quantity", false]], "plot_example_mode_predictions() (in module codes.benchmark)": [[1, "codes.benchmark.plot_example_mode_predictions", false]], "plot_example_mode_predictions() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_example_mode_predictions", false]], "plot_example_predictions_with_uncertainty() (in module codes.benchmark)": [[1, "codes.benchmark.plot_example_predictions_with_uncertainty", false]], "plot_example_predictions_with_uncertainty() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_example_predictions_with_uncertainty", false]], "plot_generalization_error_comparison() (in module codes.benchmark)": [[1, "codes.benchmark.plot_generalization_error_comparison", false]], "plot_generalization_error_comparison() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_generalization_error_comparison", false]], "plot_generalization_errors() (in module codes.benchmark)": [[1, "codes.benchmark.plot_generalization_errors", false]], "plot_generalization_errors() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_generalization_errors", false]], "plot_loss_comparison() (in module codes.benchmark)": [[1, "codes.benchmark.plot_loss_comparison", false]], "plot_loss_comparison() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_loss_comparison", false]], "plot_loss_comparison_equal() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_loss_comparison_equal", false]], "plot_loss_comparison_train_duration() (in module codes.benchmark)": [[1, "codes.benchmark.plot_loss_comparison_train_duration", false]], "plot_loss_comparison_train_duration() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_loss_comparison_train_duration", false]], "plot_losses() (in module codes.benchmark)": [[1, "codes.benchmark.plot_losses", false]], "plot_losses() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_losses", false]], "plot_losses() (in module codes.tune.evaluate_tuning)": [[5, "codes.tune.evaluate_tuning.plot_losses", false]], "plot_losses_dual_axis() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_losses_dual_axis", false]], "plot_mae_comparison() (in module codes.benchmark)": [[1, "codes.benchmark.plot_MAE_comparison", false]], "plot_mae_comparison() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_MAE_comparison", false]], "plot_relative_errors() (in module codes.benchmark)": [[1, "codes.benchmark.plot_relative_errors", false]], "plot_relative_errors() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_relative_errors", false]], "plot_relative_errors_over_time() (in module codes.benchmark)": [[1, "codes.benchmark.plot_relative_errors_over_time", false]], "plot_relative_errors_over_time() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_relative_errors_over_time", false]], "plot_surr_losses() (in module codes.benchmark)": [[1, "codes.benchmark.plot_surr_losses", false]], "plot_surr_losses() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_surr_losses", false]], "plot_test_losses() (in module codes.tune)": [[5, "codes.tune.plot_test_losses", false]], "plot_test_losses() (in module codes.tune.evaluate_study)": [[5, "codes.tune.evaluate_study.plot_test_losses", false]], "plot_uncertainty_confidence() (in module codes.benchmark)": [[1, "codes.benchmark.plot_uncertainty_confidence", false]], "plot_uncertainty_confidence() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_uncertainty_confidence", false]], "plot_uncertainty_over_time_comparison() (in module codes.benchmark)": [[1, "codes.benchmark.plot_uncertainty_over_time_comparison", false]], "plot_uncertainty_over_time_comparison() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_uncertainty_over_time_comparison", false]], "plot_uncertainty_vs_errors() (in module codes.benchmark)": [[1, "codes.benchmark.plot_uncertainty_vs_errors", false]], "plot_uncertainty_vs_errors() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.plot_uncertainty_vs_errors", false]], "polynomial (class in codes.surrogates)": [[2, "codes.surrogates.Polynomial", false]], "predict() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.predict", false]], "predict() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.predict", false]], "predict() (codes.surrogates.abstractsurrogatemodel method)": [[2, "codes.surrogates.AbstractSurrogateModel.predict", false]], "prepare_data() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.prepare_data", false]], "prepare_data() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.prepare_data", false]], "prepare_data() (codes.surrogates.abstractsurrogatemodel method)": [[2, "codes.surrogates.AbstractSurrogateModel.prepare_data", false]], "prepare_data() (codes.surrogates.fullyconnected method)": [[2, "codes.surrogates.FullyConnected.prepare_data", false]], "prepare_data() (codes.surrogates.latentneuralode method)": [[2, "codes.surrogates.LatentNeuralODE.prepare_data", false]], "prepare_data() (codes.surrogates.latentpoly method)": [[2, "codes.surrogates.LatentPoly.prepare_data", false]], "prepare_data() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.prepare_data", false]], "read_yaml_config() (in module codes.benchmark)": [[1, "codes.benchmark.read_yaml_config", false]], "read_yaml_config() (in module codes.utils)": [[6, "codes.utils.read_yaml_config", false]], "read_yaml_config() (in module codes.utils.utils)": [[6, "codes.utils.utils.read_yaml_config", false]], "register() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel class method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.register", false]], "register() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel class method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.register", false]], "register() (codes.surrogates.abstractsurrogatemodel class method)": [[2, "codes.surrogates.AbstractSurrogateModel.register", false]], "rel_errors_and_uq() (in module codes.benchmark)": [[1, "codes.benchmark.rel_errors_and_uq", false]], "rel_errors_and_uq() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.rel_errors_and_uq", false]], "release() (codes.train.train_fcts.dummylock method)": [[4, "codes.train.train_fcts.DummyLock.release", false]], "renormalize_loss_weights() (codes.surrogates.modelwrapper method)": [[2, "codes.surrogates.ModelWrapper.renormalize_loss_weights", false]], "run_benchmark() (in module codes.benchmark)": [[1, "codes.benchmark.run_benchmark", false]], "run_benchmark() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.run_benchmark", false]], "save() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.save", false]], "save() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.save", false]], "save() (codes.surrogates.abstractsurrogatemodel method)": [[2, "codes.surrogates.AbstractSurrogateModel.save", false]], "save_plot() (in module codes.benchmark)": [[1, "codes.benchmark.save_plot", false]], "save_plot() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.save_plot", false]], "save_plot_counter() (in module codes.benchmark)": [[1, "codes.benchmark.save_plot_counter", false]], "save_plot_counter() (in module codes.benchmark.bench_plots)": [[1, "codes.benchmark.bench_plots.save_plot_counter", false]], "save_table_csv() (in module codes.benchmark)": [[1, "codes.benchmark.save_table_csv", false]], "save_table_csv() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.save_table_csv", false]], "save_task_list() (in module codes.utils)": [[6, "codes.utils.save_task_list", false]], "save_task_list() (in module codes.utils.utils)": [[6, "codes.utils.utils.save_task_list", false]], "sequential_training() (in module codes.train)": [[4, "codes.train.sequential_training", false]], "sequential_training() (in module codes.train.train_fcts)": [[4, "codes.train.train_fcts.sequential_training", false]], "set_random_seeds() (in module codes.utils)": [[6, "codes.utils.set_random_seeds", false]], "set_random_seeds() (in module codes.utils.utils)": [[6, "codes.utils.utils.set_random_seeds", false]], "setup_criterion() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.setup_criterion", false]], "setup_optimizer_and_scheduler() (codes.surrogates.fullyconnected method)": [[2, "codes.surrogates.FullyConnected.setup_optimizer_and_scheduler", false]], "setup_optimizer_and_scheduler() (codes.surrogates.multionet method)": [[2, "codes.surrogates.MultiONet.setup_optimizer_and_scheduler", false]], "setup_progress_bar() (codes.surrogates.abstractsurrogate.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.setup_progress_bar", false]], "setup_progress_bar() (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel method)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.setup_progress_bar", false]], "setup_progress_bar() (codes.surrogates.abstractsurrogatemodel method)": [[2, "codes.surrogates.AbstractSurrogateModel.setup_progress_bar", false]], "surrogate_classes (in module codes.surrogates)": [[14, "codes.surrogates.surrogate_classes", false]], "t_matrix (codes.surrogates.polynomial attribute)": [[2, "codes.surrogates.Polynomial.t_matrix", false]], "tabular_comparison() (in module codes.benchmark)": [[1, "codes.benchmark.tabular_comparison", false]], "tabular_comparison() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.tabular_comparison", false]], "test_loss (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.test_loss", false]], "test_loss (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.test_loss", false]], "test_loss (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.test_loss", false]], "time_execution() (in module codes.utils)": [[6, "codes.utils.time_execution", false]], "time_execution() (in module codes.utils.utils)": [[6, "codes.utils.utils.time_execution", false]], "time_inference() (in module codes.benchmark)": [[1, "codes.benchmark.time_inference", false]], "time_inference() (in module codes.benchmark.bench_fcts)": [[1, "codes.benchmark.bench_fcts.time_inference", false]], "total_loss() (codes.surrogates.modelwrapper method)": [[2, "codes.surrogates.ModelWrapper.total_loss", false]], "train_and_save_model() (in module codes.train)": [[4, "codes.train.train_and_save_model", false]], "train_and_save_model() (in module codes.train.train_fcts)": [[4, "codes.train.train_fcts.train_and_save_model", false]], "train_duration (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.train_duration", false]], "train_duration (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.train_duration", false]], "train_duration (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.train_duration", false]], "train_loss (codes.surrogates.abstractsurrogate.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel.train_loss", false]], "train_loss (codes.surrogates.abstractsurrogate.surrogates.abstractsurrogatemodel attribute)": [[3, "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel.train_loss", false]], "train_loss (codes.surrogates.abstractsurrogatemodel attribute)": [[2, "codes.surrogates.AbstractSurrogateModel.train_loss", false]], "training_run() (in module codes.tune)": [[5, "codes.tune.training_run", false]], "training_run() (in module codes.tune.optuna_fcts)": [[5, "codes.tune.optuna_fcts.training_run", false]], "trunknet (class in codes.surrogates)": [[2, "codes.surrogates.TrunkNet", false]], "update_to() (codes.utils.data_utils.downloadprogressbar method)": [[6, "codes.utils.data_utils.DownloadProgressBar.update_to", false]], "worker() (in module codes.train)": [[4, "codes.train.worker", false]], "worker() (in module codes.train.train_fcts)": [[4, "codes.train.train_fcts.worker", false]], "worker_init_fn() (in module codes.utils)": [[6, "codes.utils.worker_init_fn", false]], "worker_init_fn() (in module codes.utils.utils)": [[6, "codes.utils.utils.worker_init_fn", false]], "write_metrics_to_yaml() (in module codes.benchmark)": [[1, "codes.benchmark.write_metrics_to_yaml", false]], "write_metrics_to_yaml() (in module codes.benchmark.bench_utils)": [[1, "codes.benchmark.bench_utils.write_metrics_to_yaml", false]]}, "objects": {"": [[0, 0, 0, "-", "codes"]], "codes": [[7, 0, 0, "-", "benchmark"], [11, 0, 0, "-", "surrogates"], [15, 0, 0, "-", "train"], [17, 0, 0, "-", "tune"], [21, 0, 0, "-", "utils"]], "codes.benchmark": [[8, 0, 0, "-", "bench_fcts"], [9, 0, 0, "-", "bench_plots"], [10, 0, 0, "-", "bench_utils"], [1, 1, 1, "", "check_benchmark"], [1, 1, 1, "", "check_surrogate"], [1, 1, 1, "", "clean_metrics"], [1, 1, 1, "", "compare_UQ"], [1, 1, 1, "", "compare_batchsize"], [1, 1, 1, "", "compare_dynamic_accuracy"], [1, 1, 1, "", "compare_extrapolation"], [1, 1, 1, "", "compare_inference_time"], [1, 1, 1, "", "compare_interpolation"], [1, 1, 1, "", "compare_main_losses"], [1, 1, 1, "", "compare_models"], [1, 1, 1, "", "compare_relative_errors"], [1, 1, 1, "", "compare_sparse"], [1, 1, 1, "", "convert_dict_to_scientific_notation"], [1, 1, 1, "", "convert_to_standard_types"], [1, 1, 1, "", "count_trainable_parameters"], [1, 1, 1, "", "discard_numpy_entries"], [1, 1, 1, "", "evaluate_UQ"], [1, 1, 1, "", "evaluate_accuracy"], [1, 1, 1, "", "evaluate_batchsize"], [1, 1, 1, "", "evaluate_compute"], [1, 1, 1, "", "evaluate_dynamic_accuracy"], [1, 1, 1, "", "evaluate_extrapolation"], [1, 1, 1, "", "evaluate_interpolation"], [1, 1, 1, "", "evaluate_sparse"], [1, 1, 1, "", "flatten_dict"], [1, 1, 1, "", "format_seconds"], [1, 1, 1, "", "format_time"], [1, 1, 1, "", "get_custom_palette"], [1, 1, 1, "", "get_model_config"], [1, 1, 1, "", "get_required_models_list"], [1, 1, 1, "", "get_surrogate"], [1, 1, 1, "", "inference_time_bar_plot"], [1, 1, 1, "", "int_ext_sparse"], [1, 1, 1, "", "load_model"], [1, 1, 1, "", "make_comparison_csv"], [1, 1, 1, "", "measure_inference_time"], [1, 1, 1, "", "measure_memory_footprint"], [1, 1, 1, "", "plot_MAE_comparison"], [1, 1, 1, "", "plot_all_generalization_errors"], [1, 1, 1, "", "plot_average_errors_over_time"], [1, 1, 1, "", "plot_average_uncertainty_over_time"], [1, 1, 1, "", "plot_comparative_dynamic_correlation_heatmaps"], [1, 1, 1, "", "plot_comparative_error_correlation_heatmaps"], [1, 1, 1, "", "plot_dynamic_correlation"], [1, 1, 1, "", "plot_dynamic_correlation_heatmap"], [1, 1, 1, "", "plot_error_correlation_heatmap"], [1, 1, 1, "", "plot_error_distribution_comparative"], [1, 1, 1, "", "plot_error_distribution_per_quantity"], [1, 1, 1, "", "plot_example_mode_predictions"], [1, 1, 1, "", "plot_example_predictions_with_uncertainty"], [1, 1, 1, "", "plot_generalization_error_comparison"], [1, 1, 1, "", "plot_generalization_errors"], [1, 1, 1, "", "plot_loss_comparison"], [1, 1, 1, "", "plot_loss_comparison_train_duration"], [1, 1, 1, "", "plot_losses"], [1, 1, 1, "", "plot_relative_errors"], [1, 1, 1, "", "plot_relative_errors_over_time"], [1, 1, 1, "", "plot_surr_losses"], [1, 1, 1, "", "plot_uncertainty_confidence"], [1, 1, 1, "", "plot_uncertainty_over_time_comparison"], [1, 1, 1, "", "plot_uncertainty_vs_errors"], [1, 1, 1, "", "read_yaml_config"], [1, 1, 1, "", "rel_errors_and_uq"], [1, 1, 1, "", "run_benchmark"], [1, 1, 1, "", "save_plot"], [1, 1, 1, "", "save_plot_counter"], [1, 1, 1, "", "save_table_csv"], [1, 1, 1, "", "tabular_comparison"], [1, 1, 1, "", "time_inference"], [1, 1, 1, "", "write_metrics_to_yaml"]], "codes.benchmark.bench_fcts": [[1, 1, 1, "", "compare_UQ"], [1, 1, 1, "", "compare_batchsize"], [1, 1, 1, "", "compare_dynamic_accuracy"], [1, 1, 1, "", "compare_extrapolation"], [1, 1, 1, "", "compare_inference_time"], [1, 1, 1, "", "compare_interpolation"], [1, 1, 1, "", "compare_main_losses"], [1, 1, 1, "", "compare_models"], [1, 1, 1, "", "compare_relative_errors"], [1, 1, 1, "", "compare_sparse"], [1, 1, 1, "", "evaluate_UQ"], [1, 1, 1, "", "evaluate_accuracy"], [1, 1, 1, "", "evaluate_batchsize"], [1, 1, 1, "", "evaluate_compute"], [1, 1, 1, "", "evaluate_dynamic_accuracy"], [1, 1, 1, "", "evaluate_extrapolation"], [1, 1, 1, "", "evaluate_interpolation"], [1, 1, 1, "", "evaluate_sparse"], [1, 1, 1, "", "run_benchmark"], [1, 1, 1, "", "tabular_comparison"], [1, 1, 1, "", "time_inference"]], "codes.benchmark.bench_plots": [[1, 1, 1, "", "get_custom_palette"], [1, 1, 1, "", "inference_time_bar_plot"], [1, 1, 1, "", "int_ext_sparse"], [1, 1, 1, "", "plot_MAE_comparison"], [1, 1, 1, "", "plot_all_generalization_errors"], [1, 1, 1, "", "plot_average_errors_over_time"], [1, 1, 1, "", "plot_average_uncertainty_over_time"], [1, 1, 1, "", "plot_comparative_dynamic_correlation_heatmaps"], [1, 1, 1, "", "plot_comparative_error_correlation_heatmaps"], [1, 1, 1, "", "plot_dynamic_correlation"], [1, 1, 1, "", "plot_dynamic_correlation_heatmap"], [1, 1, 1, "", "plot_dynamic_correlation_heatmap_old"], [1, 1, 1, "", "plot_error_correlation_heatmap"], [1, 1, 1, "", "plot_error_correlation_heatmap_old"], [1, 1, 1, "", "plot_error_distribution_comparative"], [1, 1, 1, "", "plot_error_distribution_per_quantity"], [1, 1, 1, "", "plot_example_mode_predictions"], [1, 1, 1, "", "plot_example_predictions_with_uncertainty"], [1, 1, 1, "", "plot_generalization_error_comparison"], [1, 1, 1, "", "plot_generalization_errors"], [1, 1, 1, "", "plot_loss_comparison"], [1, 1, 1, "", "plot_loss_comparison_equal"], [1, 1, 1, "", "plot_loss_comparison_train_duration"], [1, 1, 1, "", "plot_losses"], [1, 1, 1, "", "plot_losses_dual_axis"], [1, 1, 1, "", "plot_relative_errors"], [1, 1, 1, "", "plot_relative_errors_over_time"], [1, 1, 1, "", "plot_surr_losses"], [1, 1, 1, "", "plot_uncertainty_confidence"], [1, 1, 1, "", "plot_uncertainty_over_time_comparison"], [1, 1, 1, "", "plot_uncertainty_vs_errors"], [1, 1, 1, "", "rel_errors_and_uq"], [1, 1, 1, "", "save_plot"], [1, 1, 1, "", "save_plot_counter"]], "codes.benchmark.bench_utils": [[1, 1, 1, "", "check_benchmark"], [1, 1, 1, "", "check_surrogate"], [1, 1, 1, "", "clean_metrics"], [1, 1, 1, "", "convert_dict_to_scientific_notation"], [1, 1, 1, "", "convert_to_standard_types"], [1, 1, 1, "", "count_trainable_parameters"], [1, 1, 1, "", "discard_numpy_entries"], [1, 1, 1, "", "flatten_dict"], [1, 1, 1, "", "format_seconds"], [1, 1, 1, "", "format_time"], [1, 1, 1, "", "get_model_config"], [1, 1, 1, "", "get_required_models_list"], [1, 1, 1, "", "get_surrogate"], [1, 1, 1, "", "load_model"], [1, 1, 1, "", "make_comparison_csv"], [1, 1, 1, "", "measure_inference_time"], [1, 1, 1, "", "measure_memory_footprint"], [1, 1, 1, "", "save_table_csv"], [1, 1, 1, "", "write_metrics_to_yaml"]], "codes.surrogates": [[12, 0, 0, "-", "AbstractSurrogate"], [2, 2, 1, "", "AbstractSurrogateModel"], [2, 2, 1, "", "BranchNet"], [2, 2, 1, "", "ChemDataset"], [2, 2, 1, "", "Decoder"], [2, 2, 1, "", "Encoder"], [2, 2, 1, "", "FullyConnected"], [2, 2, 1, "", "FullyConnectedNet"], [2, 2, 1, "", "LatentNeuralODE"], [2, 2, 1, "", "LatentPoly"], [2, 2, 1, "", "ModelWrapper"], [2, 2, 1, "", "MultiONet"], [2, 2, 1, "", "ODE"], [2, 2, 1, "", "Polynomial"], [2, 2, 1, "", "TrunkNet"], [14, 5, 1, "", "surrogate_classes"], [2, 0, 0, "-", "surrogate_classes"]], "codes.surrogates.AbstractSurrogate": [[3, 2, 1, "", "AbstractSurrogateModel"], [13, 0, 0, "-", "surrogates"]], "codes.surrogates.AbstractSurrogate.AbstractSurrogateModel": [[3, 3, 1, "", "L1"], [3, 3, 1, "", "MAE"], [3, 3, 1, "", "config"], [3, 4, 1, "", "denormalize"], [3, 3, 1, "", "device"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "forward"], [3, 4, 1, "", "get_registered_classes"], [3, 4, 1, "", "load"], [3, 3, 1, "", "n_quantities"], [3, 3, 1, "", "n_timesteps"], [3, 3, 1, "", "normalisation"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "prepare_data"], [3, 4, 1, "", "register"], [3, 4, 1, "", "save"], [3, 4, 1, "", "setup_progress_bar"], [3, 3, 1, "", "test_loss"], [3, 3, 1, "", "train_duration"], [3, 3, 1, "", "train_loss"]], "codes.surrogates.AbstractSurrogate.surrogates": [[3, 2, 1, "", "AbstractSurrogateModel"]], "codes.surrogates.AbstractSurrogate.surrogates.AbstractSurrogateModel": [[3, 3, 1, "", "L1"], [3, 3, 1, "", "MAE"], [3, 3, 1, "", "config"], [3, 4, 1, "", "denormalize"], [3, 3, 1, "", "device"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "forward"], [3, 4, 1, "", "get_registered_classes"], [3, 4, 1, "", "load"], [3, 3, 1, "", "n_quantities"], [3, 3, 1, "", "n_timesteps"], [3, 3, 1, "", "normalisation"], [3, 4, 1, "", "predict"], [3, 4, 1, "", "prepare_data"], [3, 4, 1, "", "register"], [3, 4, 1, "", "save"], [3, 4, 1, "", "setup_progress_bar"], [3, 3, 1, "", "test_loss"], [3, 3, 1, "", "train_duration"], [3, 3, 1, "", "train_loss"]], "codes.surrogates.AbstractSurrogateModel": [[2, 3, 1, "", "L1"], [2, 3, 1, "", "MAE"], [2, 3, 1, "", "config"], [2, 4, 1, "", "denormalize"], [2, 3, 1, "", "device"], [2, 4, 1, "", "fit"], [2, 4, 1, "", "forward"], [2, 4, 1, "", "get_registered_classes"], [2, 4, 1, "", "load"], [2, 3, 1, "", "n_quantities"], [2, 3, 1, "", "n_timesteps"], [2, 3, 1, "", "normalisation"], [2, 4, 1, "", "predict"], [2, 4, 1, "", "prepare_data"], [2, 4, 1, "", "register"], [2, 4, 1, "", "save"], [2, 4, 1, "", "setup_progress_bar"], [2, 3, 1, "", "test_loss"], [2, 3, 1, "", "train_duration"], [2, 3, 1, "", "train_loss"]], "codes.surrogates.BranchNet": [[2, 4, 1, "", "forward"]], "codes.surrogates.Decoder": [[2, 4, 1, "", "forward"]], "codes.surrogates.Encoder": [[2, 4, 1, "", "forward"]], "codes.surrogates.FullyConnected": [[2, 4, 1, "", "create_dataloader"], [2, 4, 1, "", "epoch"], [2, 4, 1, "", "fit"], [2, 4, 1, "", "forward"], [2, 4, 1, "", "prepare_data"], [2, 4, 1, "", "setup_optimizer_and_scheduler"]], "codes.surrogates.FullyConnectedNet": [[2, 4, 1, "", "forward"]], "codes.surrogates.LatentNeuralODE": [[2, 3, 1, "", "config"], [2, 4, 1, "id0", "fit"], [2, 4, 1, "", "fit_profile"], [2, 4, 1, "id1", "forward"], [2, 3, 1, "", "model"], [2, 4, 1, "", "prepare_data"]], "codes.surrogates.LatentPoly": [[2, 3, 1, "", "config"], [2, 3, 1, "", "device"], [2, 4, 1, "", "fit"], [2, 4, 1, "", "forward"], [2, 3, 1, "", "model"], [2, 4, 1, "", "prepare_data"]], "codes.surrogates.ModelWrapper": [[2, 4, 1, "", "deriv"], [2, 4, 1, "", "deriv2"], [2, 4, 1, "", "deriv2_loss"], [2, 4, 1, "", "deriv_loss"], [2, 4, 1, "", "forward"], [2, 4, 1, "", "identity_loss"], [2, 4, 1, "", "l2_loss"], [2, 4, 1, "", "renormalize_loss_weights"], [2, 4, 1, "", "total_loss"]], "codes.surrogates.MultiONet": [[2, 4, 1, "", "create_dataloader"], [2, 4, 1, "", "create_dataloader_n"], [2, 4, 1, "", "epoch"], [2, 4, 1, "", "epoch_profile"], [2, 4, 1, "", "fit"], [2, 4, 1, "", "fit_profile"], [2, 4, 1, "", "forward"], [2, 4, 1, "", "prepare_data"], [2, 4, 1, "", "setup_criterion"], [2, 4, 1, "", "setup_optimizer_and_scheduler"]], "codes.surrogates.ODE": [[2, 4, 1, "", "forward"]], "codes.surrogates.Polynomial": [[2, 3, 1, "", "coef"], [2, 3, 1, "", "degree"], [2, 3, 1, "", "dimension"], [2, 4, 1, "", "forward"], [2, 3, 1, "", "t_matrix"]], "codes.surrogates.TrunkNet": [[2, 4, 1, "", "forward"]], "codes.train": [[4, 1, 1, "", "create_task_list_for_surrogate"], [4, 1, 1, "", "parallel_training"], [4, 1, 1, "", "sequential_training"], [4, 1, 1, "", "train_and_save_model"], [16, 0, 0, "-", "train_fcts"], [4, 1, 1, "", "worker"]], "codes.train.train_fcts": [[4, 2, 1, "", "DummyLock"], [4, 1, 1, "", "create_task_list_for_surrogate"], [4, 1, 1, "", "parallel_training"], [4, 1, 1, "", "sequential_training"], [4, 1, 1, "", "train_and_save_model"], [4, 1, 1, "", "worker"]], "codes.train.train_fcts.DummyLock": [[4, 4, 1, "", "acquire"], [4, 4, 1, "", "release"]], "codes.tune": [[5, 1, 1, "", "create_objective"], [18, 0, 0, "-", "evaluate_study"], [19, 0, 0, "-", "evaluate_tuning"], [5, 1, 1, "", "get_activation_function"], [5, 1, 1, "", "load_model_test_losses"], [5, 1, 1, "", "load_study_config"], [5, 1, 1, "", "load_yaml_config"], [5, 1, 1, "", "make_optuna_params"], [5, 1, 1, "", "moving_average"], [20, 0, 0, "-", "optuna_fcts"], [5, 1, 1, "", "plot_test_losses"], [5, 1, 1, "", "training_run"]], "codes.tune.evaluate_study": [[5, 1, 1, "", "load_model_test_losses"], [5, 1, 1, "", "load_study_config"], [5, 1, 1, "", "main"], [5, 1, 1, "", "moving_average"], [5, 1, 1, "", "parse_arguments"], [5, 1, 1, "", "plot_test_losses"]], "codes.tune.evaluate_tuning": [[5, 1, 1, "", "evaluate_tuning"], [5, 1, 1, "", "load_loss_history"], [5, 1, 1, "", "main"], [5, 1, 1, "", "parse_args"], [5, 1, 1, "", "plot_losses"]], "codes.tune.optuna_fcts": [[5, 1, 1, "", "create_objective"], [5, 1, 1, "", "get_activation_function"], [5, 1, 1, "", "load_yaml_config"], [5, 1, 1, "", "make_optuna_params"], [5, 1, 1, "", "training_run"]], "codes.utils": [[6, 1, 1, "", "check_and_load_data"], [6, 1, 1, "", "check_training_status"], [6, 1, 1, "", "create_dataset"], [6, 1, 1, "", "create_hdf5_dataset"], [6, 1, 1, "", "create_model_dir"], [22, 0, 0, "-", "data_utils"], [6, 1, 1, "", "determine_batch_size"], [6, 1, 1, "", "download_data"], [6, 1, 1, "", "get_data_subset"], [6, 1, 1, "", "get_progress_bar"], [6, 1, 1, "", "load_and_save_config"], [6, 1, 1, "", "load_task_list"], [6, 1, 1, "", "make_description"], [6, 1, 1, "", "nice_print"], [6, 1, 1, "", "normalize_data"], [6, 1, 1, "", "read_yaml_config"], [6, 1, 1, "", "save_task_list"], [6, 1, 1, "", "set_random_seeds"], [6, 1, 1, "", "time_execution"], [23, 0, 0, "-", "utils"], [6, 1, 1, "", "worker_init_fn"]], "codes.utils.data_utils": [[6, 6, 1, "", "DatasetError"], [6, 2, 1, "", "DownloadProgressBar"], [6, 1, 1, "", "check_and_load_data"], [6, 1, 1, "", "create_dataset"], [6, 1, 1, "", "create_hdf5_dataset"], [6, 1, 1, "", "download_data"], [6, 1, 1, "", "get_data_subset"], [6, 1, 1, "", "normalize_data"]], "codes.utils.data_utils.DownloadProgressBar": [[6, 4, 1, "", "update_to"]], "codes.utils.utils": [[6, 1, 1, "", "check_training_status"], [6, 1, 1, "", "create_model_dir"], [6, 1, 1, "", "determine_batch_size"], [6, 1, 1, "", "get_progress_bar"], [6, 1, 1, "", "load_and_save_config"], [6, 1, 1, "", "load_task_list"], [6, 1, 1, "", "make_description"], [6, 1, 1, "", "nice_print"], [6, 1, 1, "", "parse_for_none"], [6, 1, 1, "", "read_yaml_config"], [6, 1, 1, "", "save_task_list"], [6, 1, 1, "", "set_random_seeds"], [6, 1, 1, "", "time_execution"], [6, 1, 1, "", "worker_init_fn"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:data", "6": "py:exception"}, "terms": {"": [1, 4], "0": [1, 2, 5, 6], "0001": 1, "001": 1, "003": 1, "1": [1, 4, 6], "10": [1, 2], "100": [1, 2, 3], "128": 2, "1d": 5, "2": [1, 2, 5, 6], "29": [2, 3], "2nd": 1, "3": [1, 2], "300": 1, "32": 2, "3d": 2, "5": [1, 2, 5], "50th": 1, "5e": 1, "7": 6, "8": 1, "80": 6, "90th": 1, "95": 1, "98": 1, "99th": 1, "A": [1, 2, 4, 6], "For": [1, 2, 3], "If": [1, 2, 5, 6, 14], "In": [1, 4, 5], "It": [2, 5], "The": [1, 2, 3, 4, 5, 6, 14], "To": 2, "_": 6, "__": 6, "_lrschedul": 2, "abc": [2, 3], "about": 6, "abov": 1, "absolut": [1, 2, 3], "absolute_error": 1, "abstract": [2, 3], "abstractsurrogatemodel": [0, 2, 3], "accord": 6, "accur": 2, "accuraci": [1, 6], "acquir": [0, 4], "across": 1, "activ": [2, 5], "actual": 5, "add_model": [2, 3], "addit": 1, "addition": [1, 6], "after": [1, 2, 5], "afterward": 2, "align": 6, "all": [1, 2, 5, 6], "all_metr": 1, "alloc": 2, "alongsid": 1, "alreadi": [1, 6], "also": [1, 2, 5], "although": 2, "an": [1, 2, 4, 5, 6, 14], "ani": [1, 2, 3], "annot": 1, "app": [2, 3], "appear": 1, "appli": 2, "approach": 1, "appropri": 6, "ar": [1, 2, 4, 5, 6], "architectur": 2, "arg": 1, "argpars": 5, "argument": [5, 14], "arrai": [1, 2, 4, 5, 6], "ask": 6, "assum": 1, "asterisk": 1, "attribut": [2, 3, 5, 6], "avail": 5, "averag": [1, 5], "average_correl": 1, "avg_correl": 1, "ax": 1, "axi": [1, 5], "axis_max": 1, "b": 6, "back": [1, 2, 3], "backward": 1, "backward_memori": 1, "bar": [1, 2, 3, 4, 6], "base": [1, 2, 3, 4, 6], "base_dir": [1, 2, 3, 6], "basic": [2, 3], "batch": [1, 2, 3, 6], "batch_siz": [2, 3, 6], "batchsiz": 1, "befor": 6, "behavior": 1, "below": [1, 6], "bench_fct": [0, 25], "bench_plot": [0, 25], "bench_util": [0, 25], "benchmark": [0, 2, 3, 4, 6, 25], "between": [1, 2], "block": 6, "bool": [1, 2, 3, 4, 5, 6], "both": 1, "box": 6, "branch": 2, "branch_hidden_lay": 2, "branch_input": 2, "branchnet": [0, 2], "bsize": 6, "buffer": 2, "built": 14, "burn": 2, "calcul": [1, 2, 5], "call": 2, "callabl": [2, 6], "can": 1, "capsiz": 1, "care": 2, "case": [4, 6], "catastroph": 1, "cell": 1, "chart": 1, "check": [1, 6], "check_and_load_data": [0, 6], "check_benchmark": [0, 1], "check_surrog": [0, 1], "check_training_statu": [0, 6], "checkpoint": 5, "chemdataset": [0, 2], "choos": [1, 2], "chosen": [1, 2], "chrome_trace_profil": 2, "class": [1, 2, 3, 4, 6, 13, 14, 16, 22], "classmethod": [2, 3], "clean": 1, "clean_metr": [0, 1], "cli": 1, "coder_lay": 2, "coder_width": 2, "coef": [0, 2], "coeffici": 2, "color": 1, "command": 5, "compar": [1, 6], "compare_batchs": [0, 1], "compare_dynamic_accuraci": [0, 1], "compare_extrapol": [0, 1], "compare_inference_tim": [0, 1], "compare_interpol": [0, 1], "compare_main_loss": [0, 1], "compare_model": [0, 1], "compare_relative_error": [0, 1], "compare_spars": [0, 1], "compare_uq": [0, 1], "compat": [2, 3], "complet": 6, "complex": 1, "composit": 1, "comput": [1, 2, 5], "conf": [1, 5], "confid": 1, "config": [0, 1, 2, 3, 4, 5, 6], "config_path": [1, 5, 6], "configur": [1, 2, 3, 4, 5, 6], "confirm": 6, "connect": 2, "conserv": 2, "consist": [1, 2, 6], "constructor": 14, "contain": [1, 2, 3, 4, 5], "content": 25, "converg": 1, "convert": 1, "convert_dict_to_scientific_not": [0, 1], "convert_to_standard_typ": [0, 1], "copi": 6, "correct": 6, "correl": 1, "correspond": 5, "count": 1, "count_trainable_paramet": [0, 1], "cpu": [2, 4], "creat": [1, 2, 4, 5, 6, 14], "create_dataload": [0, 2], "create_dataloader_n": [0, 2], "create_dataset": [0, 6], "create_hdf5_dataset": [0, 6], "create_model_dir": [0, 6], "create_object": [0, 5], "create_task_list_for_surrog": [0, 4], "criterion": 2, "csv": 1, "cuda": [2, 6], "current": [1, 2, 4], "curvatur": 2, "custom": [1, 5], "cut": 1, "cutoff": [1, 6], "cutoff_mass": 1, "cutoff_perc": 1, "d": 1, "dashboard": 5, "data": [1, 2, 3, 5, 6], "data_dir": 6, "data_load": [2, 3], "data_param": [2, 3], "data_util": [0, 25], "databas": 5, "dataload": [1, 2, 3, 6], "dataset": [1, 2, 3, 6], "dataset_nam": 6, "dataset_test": [2, 3], "dataset_train": [2, 3], "dataset_v": [2, 3], "dataseterror": [0, 6], "decod": [0, 2], "decor": 6, "deeponet": [2, 14], "default": [1, 2, 3, 4, 5, 6], "defin": [1, 2, 3], "degre": [0, 2], "denorm": [0, 2, 3], "deriv": [0, 2], "deriv2": [0, 2], "deriv2_loss": [0, 2], "deriv_loss": [0, 2], "descript": [2, 3, 6], "desir": 1, "determin": [1, 4, 5, 6], "determine_batch_s": [0, 6], "determinist": 4, "deviat": 1, "devic": [0, 1, 2, 3, 4, 5, 6], "device_idx": 4, "device_list": 4, "device_queu": 5, "diagon": 1, "dict": [1, 2, 3, 4, 5, 6], "dictionari": [1, 2, 3, 4, 5, 6], "differ": [1, 2, 6], "differenti": 2, "dimens": [0, 2], "dimension": 2, "direct": 2, "directori": [1, 6], "disabl": 6, "discard_numpy_entri": [0, 1], "disk": [2, 3], "displai": 5, "distribut": 1, "do": [1, 6], "doc": [2, 3], "document": [2, 3], "doe": [1, 6], "don": 1, "download": 6, "download_data": [0, 6], "downloadprogressbar": [0, 6], "dpi": 1, "dual": 1, "dummi": [2, 3, 4], "dummy_timestep": [2, 3], "dummylock": [0, 4], "durat": [1, 2, 3, 6], "dure": 1, "dynam": 2, "e": [1, 2, 3, 4, 5, 6], "each": [1, 2, 5, 6], "easier": 1, "either": [1, 6], "els": 2, "empti": [1, 14], "enabl": 2, "encod": [0, 2], "end": 2, "ensembl": 1, "ensur": 6, "entri": 1, "epoch": [0, 1, 2, 3, 4, 5], "epoch_profil": [0, 2], "equat": 2, "error": [1, 2, 3, 4, 6], "errors_encount": 4, "errors_tim": 1, "etc": [1, 5], "evalu": [1, 2, 3, 5], "evaluate_accuraci": [0, 1], "evaluate_batchs": [0, 1], "evaluate_comput": [0, 1], "evaluate_dynamic_accuraci": [0, 1], "evaluate_extrapol": [0, 1], "evaluate_interpol": [0, 1], "evaluate_spars": [0, 1], "evaluate_studi": [0, 25], "evaluate_tun": [0, 25], "evaluate_uq": [0, 1], "even": 1, "event": 1, "everi": [1, 2], "exampl": 1, "example_idx": 1, "except": [6, 22], "exclud": [1, 5], "execut": 6, "exist": [1, 6], "expect": [1, 5], "explicit": 1, "express": 1, "extract": 5, "extrapol": [1, 4, 6], "factor": [1, 2, 6], "fail": 4, "fals": [1, 2, 5], "far": 6, "fcnn": 14, "featur": 2, "feedforward": 2, "few": 1, "figur": 1, "file": [1, 4, 5, 6], "fileexistserror": 6, "filenam": [1, 5], "filenotfounderror": 1, "filepath": [4, 6], "fit": [0, 2, 3], "fit_profil": [0, 2], "fix": [1, 6], "flag": [2, 4], "flatten": 1, "flatten_dict": [0, 1], "float": [1, 2, 3, 5, 6], "folder": [1, 5], "follow": [1, 2], "footprint": 1, "forc": 5, "format": [1, 5, 6], "format_second": [0, 1], "format_tim": [0, 1], "former": 2, "forward": [0, 1, 2, 3], "forward_memori": 1, "forward_memory_nograd": 1, "found": 1, "fraction": 1, "framework": [2, 3], "from": [1, 2, 3, 4, 5, 6], "full": [1, 6], "full_test_data": 6, "full_train_data": 6, "fulli": 2, "fullyconnect": [0, 2, 5, 14], "fullyconnectednet": [0, 2], "func": 6, "function": [1, 2, 3, 4, 5, 6, 8, 9, 10, 16, 18, 19, 20, 22, 23], "g": [1, 2, 3, 4, 5, 6], "gener": [1, 5, 6], "get": [1, 2, 3, 5, 6], "get_activation_funct": [0, 5], "get_custom_palett": [0, 1], "get_data_subset": [0, 6], "get_model_config": [0, 1], "get_progress_bar": [0, 6], "get_registered_class": [0, 2, 3], "get_required_models_list": [0, 1], "get_surrog": [0, 1], "given": [1, 2, 3, 4, 14], "global": 5, "gpu": 1, "gradient": 1, "group": 1, "ha": [2, 4], "have": [2, 6], "hdf5": 6, "header": 1, "heatmap": 1, "height": 1, "helper": [2, 3], "hh": 1, "hidden": 2, "hidden_s": 2, "highest": 1, "highlight": 1, "histogram": 1, "histori": [1, 5], "hook": 2, "html": [2, 3], "http": [2, 3], "i": [1, 2, 3, 4, 5, 6, 14], "id": [1, 4, 6], "ident": 2, "identifi": [1, 2, 3, 6], "identity_loss": [0, 2], "ignor": 2, "imag": [1, 5], "implement": [1, 2, 3], "in_featur": 2, "includ": [1, 2, 6], "incorrect": 6, "increase_count": 1, "increment": 1, "index": [1, 4, 6], "indic": [1, 4], "individu": 2, "infer": [1, 5], "inference_time_bar_plot": [0, 1], "inform": [2, 3, 5, 6], "initi": [1, 5, 6], "input": [1, 2, 3, 5], "input_s": 2, "input_shap": 2, "insid": 6, "instanc": [1, 2], "instead": [1, 2, 4], "int": [1, 2, 3, 4, 5, 6], "int_ext_spars": [0, 1], "integ": [5, 6], "integr": 2, "interfac": 2, "interpol": [1, 4, 6], "interv": [1, 6], "invalid": 2, "issu": [1, 4], "iter": 14, "its": [1, 5], "json": [2, 4, 6], "kei": [1, 5], "l1": [0, 2, 3], "l1loss": [2, 3], "l2": 2, "l2_loss": [0, 2], "label": [1, 5, 6], "largest": 1, "latent": 2, "latent_featur": 2, "latent_neural_od": 14, "latent_poli": 14, "latentneuralod": [0, 2, 14], "latentneuralodebaseconfig": 2, "latentpoli": [0, 2, 5, 14], "latentpolynomi": 14, "latentpolynomialbaseconfig": 2, "latter": 2, "layer": 2, "learn": 2, "learnabl": 2, "learning_r": 2, "least": 4, "left": 1, "length": 5, "like": 1, "limit": [1, 2, 5], "line": [1, 5], "linear": 2, "list": [1, 2, 3, 4, 5, 6, 14], "load": [0, 1, 2, 3, 5, 6], "load_and_save_config": [0, 6], "load_loss_histori": [0, 5], "load_model": [0, 1], "load_model_test_loss": [0, 5], "load_study_config": [0, 5], "load_task_list": [0, 6], "load_yaml_config": [0, 5], "loader": [1, 2, 3], "lock": 4, "log": [1, 6], "log10": 6, "look": [5, 6], "loss": [1, 2, 3, 5], "loss_histori": [1, 5], "low": 1, "lower": 2, "lowest": 1, "lr_schedul": 2, "m": 1, "mae": [0, 1, 2, 3], "magnitud": 1, "main": [0, 1, 2, 3, 4, 5, 6], "make": [1, 4, 5], "make_comparison_csv": [0, 1], "make_descript": [0, 6], "make_optuna_param": [0, 5], "map": [1, 2], "margin": 1, "marker": 6, "mass": [1, 2], "massloss_factor": 2, "match": [1, 2, 6], "matplotlib": 1, "matrix": 2, "max": [1, 5], "max_count": 1, "max_err": 1, "max_grad": 1, "max_i": 1, "max_valu": 1, "max_x": 1, "maximum": 1, "mean": [1, 2, 3, 5], "mean_error": 1, "mean_inference_tim": 5, "mean_tim": 1, "measur": 1, "measure_inference_tim": [0, 1], "measure_memory_footprint": [0, 1], "median": 1, "median_error": 1, "memori": [1, 2, 4], "messag": 6, "metadata": 6, "method": [1, 2, 3], "metric": [1, 4, 6], "metrics_list": 1, "min": [1, 5], "minmax": 6, "mirror": 2, "miss": [1, 6], "mm": 1, "modal": 1, "mode": [1, 4, 5, 6], "model": [0, 1, 2, 3, 4, 5, 6], "model_config": 2, "model_dir": [2, 3], "model_error": 1, "model_errors_list": 1, "model_identifi": [1, 2, 3], "model_memori": 1, "model_nam": [2, 3], "model_path": 5, "model_vers": 2, "modelwrapp": [0, 2], "modul": [7, 11, 12, 15, 17, 21, 25], "more": [1, 2, 3, 5], "move": [1, 5], "moving_averag": [0, 5], "multi": [2, 5], "multi_object": 2, "multionet": [0, 2, 14], "multipl": [1, 2, 5], "multipli": 2, "must": [2, 14], "mutabl": [4, 14], "n": 1, "n_epoch": 5, "n_metric": 1, "n_quantiti": [0, 2, 3, 6], "n_run": 1, "n_sampl": [2, 6], "n_test_sampl": 1, "n_timestep": [0, 1, 2, 3, 6], "n_train_sampl": 1, "name": [1, 2, 3, 4, 5, 6], "namespac": 5, "ndarrai": [1, 2, 3, 5, 6], "necessari": 1, "need": [1, 2, 3], "neg": 1, "nest": 1, "net": 1, "network": 2, "neural": 2, "neuron": 2, "new": [1, 6, 14], "nice": 6, "nice_print": [0, 6], "nn": [1, 2, 3, 5], "none": [1, 2, 3, 4, 5, 6], "nonzero": 5, "normal": [1, 6], "normalis": [0, 2, 3], "normalisation_mod": 6, "normalize_data": [0, 6], "notat": 1, "note": 2, "np": [1, 2, 3, 5, 6], "num_color": 1, "num_hidden_lay": 2, "num_quant": 1, "num_sampl": 1, "num_timestep": 1, "number": [1, 2, 3, 4, 5, 6], "numer": [1, 2], "numpi": [1, 6], "object": [1, 2, 3, 4, 5], "obtain": 2, "occur": 4, "od": [0, 2], "ode_lay": 2, "ode_width": 2, "off": 1, "onc": 2, "one": [1, 2, 4, 5, 6], "onli": [1, 2, 5, 6], "operatornetwork": 2, "opposit": 1, "optim": 2, "option": [1, 2, 3, 4, 5, 6], "optuna": [2, 5], "optuna_config": 5, "optuna_fct": [0, 25], "optuna_param": 5, "order": 1, "ordinari": 2, "origin": [1, 2, 3], "other": 5, "otherwis": 1, "out": 1, "out_featur": 2, "output": [2, 5], "output_factor": 2, "output_s": 2, "output_shap": 2, "over": [1, 5], "over_summari": 1, "overal": 4, "overall_progress_bar": 4, "overconfid": 1, "overridden": 2, "own": 5, "packag": 25, "palett": 1, "parallel_train": [0, 4], "param": 6, "paramet": [1, 2, 3, 4, 5, 6], "parent_kei": 1, "pars": [5, 6], "parse_arg": [0, 5], "parse_argu": [0, 5], "parse_for_non": [0, 6], "pass": [1, 2, 3, 6], "path": [1, 2, 5, 6], "pdf": 1, "peak": 1, "pearson": 1, "per": 1, "percentag": [1, 5], "percentil": 1, "perform": [1, 2, 3], "phase": 2, "pixel": 1, "place": [1, 2, 3], "plot": [1, 5], "plot_all_generalization_error": [0, 1], "plot_average_errors_over_tim": [0, 1], "plot_average_uncertainty_over_tim": [0, 1], "plot_comparative_dynamic_correlation_heatmap": [0, 1], "plot_comparative_error_correlation_heatmap": [0, 1], "plot_dynamic_correl": [0, 1], "plot_dynamic_correlation_heatmap": [0, 1], "plot_dynamic_correlation_heatmap_old": [0, 1], "plot_error_correlation_heatmap": [0, 1], "plot_error_correlation_heatmap_old": [0, 1], "plot_error_distribution_compar": [0, 1], "plot_error_distribution_per_quant": [0, 1], "plot_example_mode_predict": [0, 1], "plot_example_predictions_with_uncertainti": [0, 1], "plot_generalization_error": [0, 1], "plot_generalization_error_comparison": [0, 1], "plot_loss": [0, 1, 5], "plot_loss_comparison": [0, 1], "plot_loss_comparison_equ": [0, 1], "plot_loss_comparison_train_dur": [0, 1], "plot_losses_dual_axi": [0, 1], "plot_mae_comparison": [0, 1], "plot_relative_error": [0, 1], "plot_relative_errors_over_tim": [0, 1], "plot_surr_loss": [0, 1], "plot_test_loss": [0, 5], "plot_uncertainty_confid": [0, 1], "plot_uncertainty_over_time_comparison": [0, 1], "plot_uncertainty_vs_error": [0, 1], "plt": 1, "png": 1, "point": 1, "polynomi": [0, 2], "polynomialmodelwrapp": 2, "portion": 5, "posit": [1, 2, 3, 4, 5], "possibli": 1, "pre": 2, "precis": 1, "precomput": 2, "pred": 1, "predict": [0, 1, 2, 3], "preds_mean": 1, "preds_std": 1, "prepar": [2, 3], "prepare_data": [0, 2, 3], "present": [1, 6], "prevent": 4, "primordialtest": 5, "print": [1, 6], "problemat": 1, "process": [1, 4, 5], "product": 2, "profil": 2, "profile_batch": 2, "profile_en": 2, "profile_epoch": 2, "profile_save_path": 2, "progress": [2, 3, 4, 6], "provid": [2, 6], "pth": 5, "pyplot": 1, "pytorch": [1, 2, 4, 6], "quantif": 1, "quantifi": 1, "quantiti": [1, 2, 3, 6], "quantitiesquant": 1, "quantity_nam": 1, "queue": [4, 5], "rais": [1, 2, 5, 6], "random": [4, 6], "rang": 1, "rate": 2, "rather": 5, "ratio": 6, "raw_data": 2, "read": 5, "read_yaml_config": [0, 1, 6], "reciev": [2, 3], "recip": 2, "recurs": [1, 6], "region": 1, "regist": [0, 2, 3], "registri": [2, 3], "regular": 2, "regularization_factor": 2, "rel": 1, "rel_errors_and_uq": [0, 1], "relative_error": 1, "releas": [0, 4], "relev": 1, "relu": 2, "remov": 1, "renam": 2, "renorm": 2, "renormalize_loss_weight": [0, 2], "repeat": 1, "replac": 6, "report": 2, "repres": 2, "represent": 2, "reproduc": 6, "requir": [1, 5, 6], "requr": 2, "resolut": 1, "resourc": 1, "respect": 2, "retain": 1, "return": [1, 2, 3, 4, 5, 6], "rgba": 1, "right": 1, "row": 1, "rtype": 2, "run": [1, 2, 3, 5], "run_benchmark": [0, 1], "safe": 2, "same": 1, "sampl": 1, "save": [0, 1, 2, 3, 4, 5, 6], "save_plot": [0, 1], "save_plot_count": [0, 1], "save_table_csv": [0, 1], "save_task_list": [0, 6], "scalar": 2, "scale": [1, 2, 3], "schedul": 2, "scientif": 1, "scope": 2, "second": [1, 2], "see": [1, 2, 3], "seed": [4, 6], "sep": 1, "separ": 1, "sequenc": 14, "sequential_train": [0, 4], "serial": 1, "session": 4, "set": [1, 2, 3, 6], "set_random_se": [0, 6], "setup_criterion": [0, 2], "setup_optimizer_and_schedul": [0, 2], "setup_progress_bar": [0, 2, 3], "sever": 1, "shade": 1, "shape": [1, 2, 6], "share": 4, "short": 2, "shortest": 5, "should": [2, 3, 5], "show": 1, "show_titl": [1, 5], "shown": 1, "shuffl": [2, 3], "side": 1, "silent": 2, "sinc": 2, "singl": [1, 2, 4, 5], "size": [1, 2, 3, 5, 6], "skew": 1, "slice": 2, "slope": 2, "smallest": 1, "smooth": 1, "so": [1, 2, 6], "someth": 2, "space": 2, "span": 1, "spars": [1, 6], "speci": 2, "species_nam": 1, "specif": [1, 4, 5, 6], "specifi": [2, 6, 14], "split": [2, 6], "sqrt": 1, "ss": 1, "standard": [1, 2], "standardis": 6, "start": 1, "state": 2, "static": 2, "statist": 6, "std": 1, "std_time": 1, "step": [2, 5], "store": [2, 5, 6], "str": [1, 2, 3, 4, 5, 6], "string": [1, 6], "strip": 1, "structur": [2, 3], "studi": 5, "study_nam": 5, "subclass": [2, 3], "subfold": [2, 3, 6], "submodul": [0, 25], "subpackag": 25, "subplot": 1, "subset": 6, "subset_factor": 6, "suggest": 5, "summary_stat": 1, "support": 2, "surr_idx": 6, "surr_nam": [1, 2, 3, 4, 5], "surrog": [0, 1, 4, 5, 6, 25], "surrogate_class": [0, 1, 25], "surrogate_nam": [1, 6], "surrogatemodel": 1, "svg": 1, "symmetr": 1, "synchron": 1, "t": [1, 2], "t_matrix": [0, 2], "t_rang": 2, "tabl": 1, "tabular": 1, "tabular_comparison": [0, 1], "tail": 1, "take": 2, "taken": 4, "tanh": 2, "tanh_reg": 2, "target": [1, 2, 3], "task": [4, 6], "task_list_filepath": 4, "task_queu": 4, "tensor": [2, 3], "tenth": 1, "term": 2, "test": [1, 2, 3, 5, 6], "test_data": 6, "test_load": [1, 2, 3], "test_loss": [0, 1, 2, 3, 5], "text": 1, "than": [1, 5], "thei": [1, 2], "them": [1, 2], "thi": [1, 2, 3, 5, 6], "thin": 1, "those": 1, "thread": 4, "threadlock": 4, "threshold": 1, "threshold_factor": 1, "through": 2, "time": [1, 2, 5, 6], "time_execut": [0, 6], "time_infer": [0, 1], "timestep": [1, 2, 3, 6], "titl": [1, 5], "toler": 6, "too": 1, "top": [1, 5], "torch": [1, 2], "torchod": 2, "total": [1, 2, 5, 6], "total_loss": [0, 2], "tqdm": [2, 3, 4, 6], "track": 1, "train": [0, 1, 2, 3, 5, 6, 25], "train_and_save_model": [0, 4], "train_data": 6, "train_dur": [0, 1, 2, 3], "train_fct": [0, 25], "train_load": [2, 3], "train_loss": [0, 1, 2, 3, 5], "trainabl": 1, "training_id": [1, 2, 3, 4], "training_run": [0, 5], "trajectori": [1, 2, 5], "transfer": 6, "transform": [1, 6], "trial": [2, 5], "true": [1, 2, 3, 4, 5, 6], "trunk": 2, "trunk_hidden_lay": 2, "trunk_input": 2, "trunk_input_s": 2, "trunknet": [0, 2], "tsize": 6, "tune": [0, 25], "tupl": [1, 2, 3, 5, 6], "two": 1, "type": [1, 2, 3, 4, 5, 6], "typeerror": [2, 6], "uncertainti": 1, "under": 5, "under_summari": 1, "underconfid": 1, "uniform": 2, "uniqu": 6, "unique_id": 6, "unit": [2, 6], "unus": 2, "up": [2, 3], "updat": [1, 6], "update_to": [0, 6], "upper": 1, "uq": [1, 6], "us": [1, 2, 3, 4, 5, 6], "usag": 1, "use_optimal_param": 1, "usual": 5, "util": [0, 2, 25], "val_data": 6, "valid": [2, 3, 5, 6], "valu": [1, 2, 5, 6], "valueerror": [1, 5, 6], "variou": 1, "verbos": 6, "version": [1, 2], "versu": 1, "view": 5, "wa": 1, "wai": 6, "we": 1, "web": [2, 3], "weight": [1, 2], "weighted_diff": 1, "welcom": 24, "whatev": 2, "when": [1, 6], "where": [1, 5, 6], "whether": [1, 2, 3, 5, 6], "which": [1, 2, 4], "while": [1, 2], "width": [2, 6], "window": 5, "window_s": 5, "within": [2, 5, 6], "without": 1, "worker": [0, 4, 6], "worker_id": 6, "worker_init_fn": [0, 6], "wrap": 2, "write": 1, "write_metrics_to_yaml": [0, 1], "x": [1, 2], "x_max": 1, "x_pred": 2, "x_true": 2, "xcut_perc": 1, "xlabel": 1, "xlog": 1, "y": [1, 5], "y_max": 1, "yaml": [1, 5, 6], "\u00b5": 1}, "titles": ["codes package", "codes.benchmark package", "codes.surrogates package", "codes.surrogates.AbstractSurrogate package", "codes.train package", "codes.tune package", "codes.utils package", "codes.benchmark", "codes.benchmark.bench_fcts", "codes.benchmark.bench_plots", "codes.benchmark.bench_utils", "codes.surrogates", "codes.surrogates.AbstractSurrogate", "codes.surrogates.AbstractSurrogate.surrogates", "codes.surrogates.surrogate_classes", "codes.train", "codes.train.train_fcts", "codes.tune", "codes.tune.evaluate_study", "codes.tune.evaluate_tuning", "codes.tune.optuna_fcts", "codes.utils", "codes.utils.data_utils", "codes.utils.utils", "CODES API Documentation", "codes"], "titleterms": {"abstractsurrog": [3, 12, 13], "api": 24, "bench_fct": [1, 8], "bench_plot": [1, 9], "bench_util": [1, 10], "benchmark": [1, 7, 8, 9, 10], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "content": [0, 1, 2, 3, 4, 5, 6], "data_util": [6, 22], "document": 24, "evaluate_studi": [5, 18], "evaluate_tun": [5, 19], "modul": [0, 1, 2, 3, 4, 5, 6], "optuna_fct": [5, 20], "packag": [0, 1, 2, 3, 4, 5, 6], "submodul": [1, 2, 3, 4, 5, 6], "subpackag": 0, "surrog": [2, 3, 11, 12, 13, 14], "surrogate_class": [2, 14], "train": [4, 15, 16], "train_fct": [4, 16], "tune": [5, 17, 18, 19, 20], "util": [6, 21, 22, 23]}})